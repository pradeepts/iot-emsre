{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "iotEdgeAdminUserName": {
            "type": "string",
            "metadata": {
                "description": "username for windows virtual machine"
            }
        },
        "iotEdgeAdminPassword": {
            "type": "securestring",
            "metadata": {
                "description": "password for windows virtual machine"
            }
        },
        "websiteName": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Give the websitename used in the reditect URL during the webapplication creation(E.g : give 'iotwebsite' from https://iotwebsite.azurewebsites.net/redirect.html)"
            }
        },
        "emailHost": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the host name for sending email notifications"
            }
        },
        "senderEmail": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the email ID of the sender for email notifications (e.g.: iot@onmicrosoft.com)"
            }
        },
        "senderEmailPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "descrition": "Describes the password for sender email ID for email notifications"
            }
        },
        "b2cTenant": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes B2C Tenant Name Directory,refer the prereq section of deployment document for more info"
            }
        },
        "b2cClientId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the client Id of the application registered in B2C Directory,refer the prereq section of deployment document for more info"
            }
        },
        "b2cClientSecret": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the Client secret of the application registered in B2C Directory,refer the prereq section of deployment document for more info"
            }
        },
        "b2cSignUpPolicyId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the B2C Sign Up policy,refer the prereq section of deployment document for more info"
            }
        },
        "b2cSignInPolicyId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the B2C Sign in policy,refer the prereq section of deployment document for more info"
            }
        },
        "b2cEditProfilePolicyId": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the B2C Profile Editing policy,refer the prereq section of deployment document for more info"
            }
        },
        "b2cChangePasswordPolicy": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "Describes the B2C Change Password policy,refer the prereq section of deployment document for more info"
            }
        },
        "sqlAdministratorLogin": {
            "type": "string",
            "defaultValue": "",
            "metadata": {
                "description": "The SQL authentication admin user of the SQL Server, make a note of Username this will be used further"
            }
        },
        "sqlAdministratorLoginPassword": {
            "type": "securestring",
            "defaultValue": "",
            "metadata": {
                "description": "The SQL authentication password of the admin user of the SQL Server, make a note of the Password this will be used further"
            }
        },
        "iotHubSkuName": {
            "type": "string",
            "defaultValue": "F1",
            "allowedValues": [
                "F1",
                "S1",
                "S2"
            ],
            "metadata": {
                "description": "One of the supported SKUs: F1, S1 or S2"
            }
        },
        "capacityUnits": {
            "type": "int",
            "minValue": 1,
            "defaultValue": 1,
            "metadata": {
                "description": "Number of desired IoT Hub units. Restricted to 1 unit for F1. Can be set up to maximum number allowed for subscription."
            }
        },
        "d2cMessageRetentionInDaysPeriod": {
            "type": "int",
            "minValue": 1,
            "maxValue": 7,
            "defaultValue": 1,
            "metadata": {
                "description": "Retention time in days for device-to-cloud messages."
            }
        },
        "d2cPartitionCount": {
            "type": "int",
            "minValue": 2,
            "defaultValue": 2,
            "allowedValues": [
                2,
                3,
                4,
                5,
                6,
                7,
                8,
                9,
                10,
                11,
                12,
                13,
                14,
                15,
                16,
                17,
                18,
                19,
                20,
                21,
                22,
                23,
                24,
                25,
                26,
                27,
                28,
                29,
                30,
                31,
                32
            ],
            "metadata": {
                "description": "Number of desired partitions for device-to-cloud event ingestion.Restricted to 1 unit for F1"
            }
        },
        "numberOfStreamingUnits": {
            "type": "int",
            "minValue": 1,
            "maxValue": 48,
            "defaultValue": 1,
            "allowedValues": [
                1,
                3,
                6,
                12,
                18,
                24,
                30,
                36,
                42,
                48
            ],
            "metadata": {
                "description": "Number of Streaming Units"
            }
        },
        "skuName": {
            "type": "string",
            "defaultValue": "B1",
            "allowedValues": [
                "D1",
                "B1",
                "B2",
                "B3",
                "S1",
                "S2",
                "S3",
                "P1",
                "P2",
                "P3",
                "P4"
            ],
            "metadata": {
                "description": "Describes plan's pricing tier and instance size. Check details at https://azure.microsoft.com/en-us/pricing/details/app-service/"
            }
        },
        "skuCapacity": {
            "type": "int",
            "defaultValue": 1,
            "minValue": 1,
            "metadata": {
                "description": "Describes plan's instance count"
            }
        },
        "MLskuName": {
            "type": "string",
            "defaultValue": "S1",
            "allowedValues": [
                "S1",
                "S2",
                "S3"
            ],
            "metadata": {
                "description": "Pricing tier for Workspace"
            }
        },
        "capacity": {
            "type": "int",
            "allowedValues": [
              1,
              2,
              3,
              4,
              5
            ],
            "defaultValue": 2,
            "metadata": {
              "description": "Number of instances for waf"
            }
          }
    },
    "variables": {
        "apiVersions": {
            "deploymentApiVersion": "2016-02-01",
            "sqlServerApiVersion": "2015-05-01-preview",
            "sqlDBApiVersion": "2014-04-01-preview",
            "workspaceApiVersion": "2016-04-01",
            "planApiVersion": "2016-05-01-preview",
            "webApiVersion": "2016-03-01",
            "webApiVersion1": "2015-08-01",
            "webApiVersion2": "2014-08-01-preview",
            "iotHubApiversion": "2016-02-03",
            "saApiVersion": "2016-03-01",
            "networkApiVerion": "2017-08-01",
            "storageApiVersion": "2015-06-15",
            "storageApiVersion1": "2016-01-01",
            "computeApiVersion": "2016-04-30-preview",
            "aseHostEnvApiVersion": "2015-02-01",
            "aseVnetApiVersion": "2016-06-01",
            "aseNetworkApiVersion": "2015-06-15",
            "wafNetworkApiVersion": "2017-03-01",
            "wafApiVersion": "2017-06-01"
        },
        "azureSQL": {
            "location": "[variables('location')]",
            "sqlAuthenticationLogin": "[parameters('sqlAdministratorLogin')]",
            "sqlAuthenticationPassword": "[parameters('sqlAdministratorLoginPassword')]",
            "collation": "SQL_Latin1_General_CP1_CI_AS",
            "databaseName1": "iotdb",
            "databaseName2": "webdb",
            "edition": "Basic",
            "requestedServiceObjectiveName": "Basic",
            "maxSizeBytes": "2147483648",
            "serverName": "[concat('sqlserver',variables('suffix'))]",
            "storageKeyType": "SharedAccessKey",
            "storageKey": "?",
            "tableName": "dbo.PowergridView",
            "storageUri1": "https://projectiot.blob.core.windows.net/iothub/iotdb.bacpac",
            "storageUri2": "https://projectiot.blob.core.windows.net/iothub/webdb.bacpac"
        },
        "webSiteSettings": {
            "location": "[variables('location')]",
            "webjobStorageName": "[concat('webjobstr',variables('suffix'))]",
            "webjobStorageType": "Standard_LRS",
            "hostingPlanName": "AppServPlan",
            "skuName": "[parameters('skuName')]",
            "skuCapacity": "[parameters('skuCapacity')]",
            "assetDetailsWebApp": "[concat('AssetDetails', variables('suffix'))]",
            "weatherApiWebApp": "[concat('WeatherApi', variables('suffix'))]",
            "connectionString": "[concat('Server=tcp:',variables('azureSQL').serverName,'.database.windows.net,1433;Initial Catalog=',variables('azureSQL').databaseName1,';Persist Security Info=False;User ID=',variables('azureSQL').sqlAuthenticationLogin,';Password=',variables('azureSQL').sqlAuthenticationPassword,';MultipleActiveResultSets=False;Encrypt=True;TrustServerCertificate=False;Connection Timeout=30;')]",
            "AssetdetailsPackageURI": "https://projectiot.blob.core.windows.net/iothub/AssetDetails.zip",
            "WeatherApiPackageURI": "https://projectiot.blob.core.windows.net/iothub/SimulatedDevice_weatherapi.zip",
            "saStoken": "?",
            "jobCollectionName": "WeatherWebJob",
            "webSiteName": "[parameters('websiteName')]",
            "WebAppPackageURI": "[concat(variables('webAppDeployPackageURI'), variables('sasToken'))]",
            "blobconnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',variables('deployStorageAccountName'),';AccountKey=',variables('deployStorageAccountKey'))]",
            "apiServerName": "[concat('apiserver',variables('suffix'))]",
            "b2cClientId": "[parameters('b2cClientId')]",
            "b2cSignInPolicyId": "[parameters('b2cSignInPolicyId')]",
            "b2cSignUpPolicyId": "[parameters('b2cSignUpPolicyId')]",
            "b2cEditProfilePolicyId": "[parameters('b2cEditProfilePolicyId')]",
            "b2cTenant": "[parameters('b2cTenant')]",
            "b2cClientSecret": "[parameters('b2cClientSecret')]",
            "b2cChangePasswordPolicy": "[parameters('b2cChangePasswordPolicy')]",
            "emailHost": "[parameters('emailHost')]",
            "emailHostPort": 25,
            "senderEmail": "[parameters('senderEmail')]",
            "senderEmailPassword": "[parameters('senderEmailPassword')]",
            "websiteFullAddress": "[variables('websiteFullAddress')]",
            "b2cAadInstance": "https://login.microsoftonline.com/{0}/v2.0/.well-known/openid-configuration?p={1}",
            "notificationIcon": "./csu/Assets/logo.png",
            "anomalyThreshold": "0.6",
            "meterKWHCost": "0.04",
            "databaseConnString": "[concat('data source=',variables('azureSQL').serverName,'.database.windows.net;initial catalog=',variables('azureSQL').databaseName2,';persist security info=True;user id=',parameters('sqlAdministratorLogin'),';password=',parameters('sqlAdministratorLoginPassword'))]",
            "notificationClickAction": "[variables('websiteFullAddress')]",
            "restServerPackageURI": "[concat(variables('restServerDeployPackageURI'), variables('sasToken'))]",
            "powerGridEntities": "[concat('metadata=res://*/Entities.PowergridModel.csdl|res://*/Entities.PowergridModel.ssdl|res://*/Entities.PowergridModel.msl;provider=System.Data.SqlClient;provider connection string=\"data source=',variables('azureSQL').serverName,'.database.windows.net;initial catalog=',variables('azureSQL').databaseName2,';persist security info=True;user id=',parameters('sqlAdministratorLogin'),';password=',parameters('sqlAdministratorLoginPassword'),';multipleactiveresultsets=True;application name=EntityFramework\"')]"
        },
        "iotHubSettings": {
            "location": "[variables('location')]",
            "iotHubName": "[concat('iot-hub', variables('suffix'))]",
            "skuName": "[parameters('iotHubSkuName')]",
            "capacityUnits": "[parameters('capacityUnits')]",
            "d2cMessageRetentionInDaysPeriod": "[parameters('d2cMessageRetentionInDaysPeriod')]",
            "d2cPartitionCount": "[parameters('d2cPartitionCount')]"
        },
        "streamAnalyticsSettings": {
            "location": "[variables('location')]",
            "streamAnalyticsJobName": "[concat('stream-analytics', variables('suffix'))]",
            "sku": "standard",
            "numberOfStreamingUnits": "[parameters('numberOfStreamingUnits')]"
        },
        "iotEdgeServer": {
            "location": "[variables('location')]",
            "virtualNetworkName": "iotedge-vnet",
            "addressPrefix": "10.0.0.0/16",
            "subnetName": "iotedge-subnet",
            "subnetPrefix": "10.0.0.0/24",
            "publicIpAddressName": "iotedage-pip",
            "publicIpAddressType": "Dynamic",
            "publicIpAddressSku": "Basic",
            "networkSecurityGroupName": "iotedge-nsg",
            "networkInterfaceName": "iotedge-nic",
            "dnsLabelPrefix": "[concat('iotedgeserver',variables('suffix'))]",
            "diagnosticsStorageAccountName": "[concat('strgaccnt',variables('suffix'))]",
            "diagnosticsStorageAccountType": "Standard_LRS",
            "virtualMachineName": "iotedge",
            "adminUsername": "[parameters('iotEdgeAdminUserName')]",
            "adminPassword": "[parameters('iotEdgeadminPassword')]",
            "virtualMachineSize": "Standard_E4s_v3",
            "customImageSubscription": "2927c217-b119-4d3b-8a13-82a1c3a16c8f",
            "customImageRG": "iot-vhds"
        },
        "appServiceEnv": {
            "location": "[variables('location')]",
            "aseDnsSuffix": "[concat('asedsfd',substring(uniqueString(resourceGroup().id),4,9))]",
            "internalLoadBalancingMode": "3",
            "networkSecurityGroupName": "asensg",
            "virtualNetworkName": "asevnet",
            "subnetName": "asesubnet",
            "subnetName1": "appGatewafSubnet",
            "subnetNSGName": "asesubnsg",
            "subnetRouteTableName": "ase-route",
            "appName": "[concat('aseenv',substring(uniqueString(resourceGroup().id),4,9))]",
            "vnetAddress": "10.0.0.0/16",
            "subnetPrefix": "10.0.1.0/24",
            "subnetPrefix1":"10.0.0.0/28",
            "kind": "ASEV2"
        },
        "applicationGateWaf": {
            "location": "[variables('location')]",
            "applicationGatewayName": "applicationGatewaywaf",
            "publicIPAddressName": "wafpublicIp",
            "dnsPrefix" : "[concat('appwaf',substring(uniqueString(resourceGroup().id),4,9))]",
            "publicIPAddressType": "Dynamic",
            "wafRuleSetVersion": "3.0",
            "wafRuleSetType": "OWASP",
            "backendIpAddress1": "10.0.1.10",
            "backendIpAddress2": "10.0.1.11",
            "applicationGatewaySize": "WAF_Medium",
            "wafEnabled": true,
            "capacity": "[parameters('capacity')]"
        },   
        "mlSettings": {
            "location": "South Central US",
            "workspaceName": "workspace",
            "mlSkuName": "[parameters('MLskuName')]",
            "mlStorageName": "[concat('mlstr', variables('suffix'))]"
        },
        "websiteFullAddress": "[concat('https://',parameters('websiteName'),'.azurewebsites.net/')]",
        "deployStorageAccountName": "projectiot",
        "deployStorageAccountKey": "68qPHnikzAitr3fjvPAyem7Tc0y2pf+BVob4F+opoX20PhV0yJGQc/guxxhCV/Uscp0gE1EHn+GCGfwOiaF9tg==",
        "sasToken": "?",
        "webAppDeployPackageURI": "https://projectiot.blob.core.windows.net/iothub/CSUWebApp.zip",
        "restServerDeployPackageURI": "https://projectiot.blob.core.windows.net/iothub/RestService.zip",
        "location": "southcentralus",
        "baseUrl": "https://raw.githubusercontent.com/sysgain/iot-emsre/hardening/",
        "deploymentApiVersion": "2016-02-01",
        "suffix": "[substring(uniqueString(resourceGroup().id), 0, 5)]"
    },
    "resources": [
        {
            "type": "Microsoft.Resources/deployments",
            "name": "IotEdgeServer",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/iot-edge.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "iotEdgeServer": {
                        "value": "[variables('iotEdgeServer')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "IotHub",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "IotEdgeServer"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/iot-hub.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "SqlServer",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "IotEdgeServer"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/sql-server.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "azureSQL": {
                        "value": "[variables('azureSQL')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "AppComponents",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "SqlServer"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/app-components.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "webSiteSettings": {
                        "value": "[variables('webSiteSettings')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "mlSettings": {
                        "value": "[variables('mlSettings')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "StreamAnalytics",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "IotEdgeServer",
                "IotHub",
                "AppComponents"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/stream-analytics.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "streamAnalyticsSettings": {
                        "value": "[variables('streamAnalyticsSettings')]"
                    },
                    "iotHubSettings": {
                        "value": "[variables('iotHubSettings')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    },
                    "azureSQL": {
                        "value": "[variables('azureSQL')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "appServiceEnvironment",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/app-serviceenv.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "appServiceEnv": {
                        "value": "[variables('appServiceEnv')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    }
                }
            }
        },
        {
            "type": "Microsoft.Resources/deployments",
            "name": "applicationGateWaf",
            "apiVersion": "[variables('deploymentApiVersion')]",
            "dependsOn": [
                "appServiceEnvironment"
            ],
            "properties": {
                "mode": "Incremental",
                "templateLink": {
                    "uri": "[concat(variables('baseUrl'), 'nested/app-gatewaywaf.json')]",
                    "contentVersion": "1.0.0.0"
                },
                "parameters": {
                    "applicationGateWaf": {
                        "value": "[variables('applicationGateWaf')]"
                    },
                    "appServiceEnv": {
                        "value": "[variables('appServiceEnv')]"
                    },
                    "apiVersions": {
                        "value": "[variables('apiVersions')]"
                    }
                }
            }
        }
    ],
    "outputs": {
        "azureSQLEndpoint": {
            "type": "string",
            "value": "[reference('SqlServer').outputs.azureSQLServerName.value]"
        },
        "azureSQLIoTDBName": {
            "type": "string",
            "value": "[reference('SqlServer').outputs.iotDBName.value]"
        },
        "azureSQLWebDBName": {
            "type": "string",
            "value": "[reference('SqlServer').outputs.webDBName.value]"
        },
        "azureSQLUsername": {
            "type": "string",
            "value": "[parameters('sqlAdministratorLogin')]"
        },
        "azureSqlPassword": {
            "type": "string",
            "value": "Enter the sqlAdministratorLoginPassword which you have enetered in parameter section while deploying the template."
        },
        "assetDetailsWebURL": {
            "type": "string",
            "value": "[concat('https://',variables('webSiteSettings').assetDetailsWebApp,'.azurewebsites.net/')]"
        },
        "b2cWebSiteUrl": {
            "type": "string",
            "value": "[variables('websiteFullAddress')]"
        },
        "webJobUrl": {
            "type": "string",
            "value": "[concat('https://',variables('webSiteSettings').apiServerName,'.scm.azurewebsites.net/azurejobs/')]"
        },
        "iotEdgeFQDN": {
            "type": "string",
            "value": "[reference('IotEdgeServer').outputs.IotEdgeFQDN.value]"
        },
        "iotEdgeAdminUserName": {
            "type": "string",
            "value": "[parameters('iotEdgeAdminUserName')]"
        },
        "iotEdgeAdminPassword": {
            "type": "string",
            "value": "[parameters('iotEdgeAdminPassword')]"
        },
        "webjobStorageaccntName": {
            "type": "string",
            "value": "[variables('webSiteSettings').webjobStorageName]"
        },
        "wafFqdn": {
            "type": "string",
            "value": "[reference('applicationGateWaf').outputs.appWafFqdn.value]"
        }
    }
}