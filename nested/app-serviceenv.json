{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "appServiceEnv": {
            "type": "object"
        },
        "apiVersions": {
            "type": "object"
        },
        "webSiteSettings": {
            "type": "object"
        },
        "aseLocation":{
            "type": "string"
        }
    },
    "variables": {  
        "vnetId": "[resourceId('Microsoft.Network/virtualNetworks/',parameters('appServiceEnv').virtualNetworkName)]"
    },
    "resources": [
            {
                "name": "[parameters('appServiceEnv').appName]",
                "type": "Microsoft.Web/hostingEnvironments",
                "apiVersion": "[parameters('apiVersions').aseHostEnvApiVersion]",
                "kind": "[parameters('appServiceEnv').kind]",
                "properties": {
                    "name": "[parameters('appServiceEnv').appName]",
                    "location": "[parameters('aseLocation')]",
                    "VirtualNetwork": {
                        "Id": "[variables('vnetId')]",
                        "type": "Microsoft.Network/virtualNetworks",
                        "Subnet": "[parameters('appServiceEnv').subnetName]"
                    },
                    "dnsSuffix": "[parameters('appServiceEnv').aseDomainName]",
                    "internalLoadBalancingMode": "[parameters('appServiceEnv').internalLoadBalancingMode]"
                },
                "location": "[parameters('aseLocation')]",
                "dependsOn": [
                    "[concat('Microsoft.Network/virtualNetworks/', parameters('appServiceEnv').virtualNetworkName)]"
                ]
            },
            {
                "apiVersion": "[parameters('apiVersions').webApiVersion]",
                "name": "[parameters('webSiteSettings').hostingPlanName]",
                "type": "Microsoft.Web/serverfarms",
                "location": "[parameters('webSiteSettings').location]",
                "dependsOn": [
                ],
                "properties": {
                    "name": "[parameters('webSiteSettings').hostingPlanName]",
                    "hostingEnvironment": "[parameters('appServiceEnv').appName]",
                    "hostingEnvironmentId": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('appServiceEnv').appName)]"
                  },
                "sku": {
                    "name": "[parameters('webSiteSettings').skuName]",
                    "capacity": "[parameters('webSiteSettings').skuCapacity]"
                },
                "properties": {
                    "name": "[parameters('webSiteSettings').hostingPlanName]"
                }
            },
            {
                "apiVersion": "[parameters('apiVersions').webApiVersion]",
                "name": "[parameters('webSiteSettings').assetDetailsWebApp]",
                "type": "Microsoft.Web/sites",
                "location": "[parameters('webSiteSettings').location]",
                "dependsOn": [
                    "[resourceId('Microsoft.Web/serverfarms', parameters('webSiteSettings').hostingPlanName)]"
                ],
                "properties": {
                    "name": "[parameters('webSiteSettings').assetDetailsWebApp]",
                    "serverFarmId": "[parameters('webSiteSettings').hostingPlanName]",
                    "hostingEnvironment": "[parameters('appServiceEnv').appName]",
                    "hostingEnvironmentId": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('appServiceEnv').appName)]"
                },
                "resources": [
                    {
                        "apiVersion": "[parameters('apiVersions').webApiVersion]",
                        "name": "web",
                        "type": "config",
                        "dependsOn": [
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').assetDetailsWebApp)]",
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').assetDetailsWebApp, '/extensions/MSDeploy')]"
                        ],
                        "tags": {
                            "displayName": "AssetDetailsConfig"
                        },
                        "properties": {
                            "phpVersion": "5.6",
                            "netFrameworkVersion": "v4.6",
                            "use32BitWorkerProcess": false,
                            "webSocketsEnabled": true,
                            "alwaysOn": true,
                            "remoteDebuggingEnabled": true,
                            "remoteDebuggingVersion": "VS2015"
                        }
                    },
                    {
                        "name": "MSDeploy",
                        "type": "extensions",
                        "location": "[parameters('webSiteSettings').location]",
                        "apiVersion": "[parameters('apiVersions').webApiVersion]",
                        "dependsOn": [
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').assetDetailsWebApp)]"
                        ],
                        "tags": {
                            "displayName": "AssetDetails"
                        },
                        "properties": {
                            "packageUri": "[concat(parameters('webSiteSettings').AssetdetailsPackageURI, parameters('webSiteSettings').SasToken)]"
                        }
                    },
                    {
                        "name": "connectionstrings",
                        "type": "config",
                        "apiVersion": "[parameters('apiVersions').webApiVersion]",
                        "dependsOn": [
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').assetDetailsWebApp)]",
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').assetDetailsWebApp, '/extensions/MSDeploy')]"
                        ],
                        "tags": {
                            "displayName": "AssetDetailConnectionStrings"
                        },
                        "properties": {
                            "DbConnect": {
                                "value": "[parameters('webSiteSettings').connectionString]",
                                "type": "Custom"
                            }
                        }
                    }
                ]
            },
            {
                "apiVersion": "[parameters('apiVersions').webApiVersion]",
                "name": "[parameters('webSiteSettings').webSiteName]",
                "type": "Microsoft.Web/sites",
                "location": "[parameters('webSiteSettings').location]",
                "dependsOn": [
                    "[parameters('webSiteSettings').hostingPlanName]"
                ],
                "tags": {
                    "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('webSiteSettings').hostingPlanName))]": "empty",
                    "displayName": "Website"
                },
                "properties": {
                    "name": "[parameters('webSiteSettings').webSiteName]",
                    "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('webSiteSettings').hostingPlanName)]",
                    "hostingEnvironment": "[parameters('appServiceEnv').appName]",
                    "hostingEnvironmentId": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('appServiceEnv').appName)]"
                },
                "resources": [
                    {
                        "apiVersion": "[parameters('apiVersions').webApiVersion1]",
                        "name": "web",
                        "type": "config",
                        "dependsOn": [
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').webSiteName)]",
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').webSiteName, '/extensions/MSDeploy')]"
                        ],
                        "tags": {
                            "displayName": "WebAppConfig"
                        },
                        "properties": {
                            "phpVersion": "5.6",
                            "netFrameworkVersion": "v4.6",
                            "use32BitWorkerProcess": false,
                            "webSocketsEnabled": true,
                            "alwaysOn": true,
                            "remoteDebuggingEnabled": true,
                            "remoteDebuggingVersion": "VS2015"
                        }
                    },
                    {
                        "name": "MSDeploy",
                        "type": "extensions",
                        "location": "[parameters('webSiteSettings').location]",
                        "apiVersion": "[parameters('apiVersions').webApiVersion1]",
                        "dependsOn": [
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').webSiteName)]",
                            "[concat('Microsoft.Storage/storageAccounts/', parameters('webSiteSettings').webjobStorageName)]"
                        ],
                        "tags": {
                            "displayName": "WebAppMSDeploy"
                        },
                        "properties": {
                            "packageUri": "[parameters('webSiteSettings').WebAppPackageURI]"
                        }
                    },
                    {
                        "name": "connectionstrings",
                        "type": "config",
                        "apiVersion": "[parameters('apiVersions').webApiVersion1]",
                         "dependsOn": [
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').webSiteName)]",
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').webSiteName, '/extensions/MSDeploy')]"
                        ],
                        "tags": {
                            "displayName": "WebAppConnectionStrings"
                        },
                        "properties": {
                            "BlobConnection": {
                                "value": "[parameters('webSiteSettings').blobconnectionString]",
                                "type": "Custom"
                            }
                        }
                    },
                    {
                        "name": "appsettings",
                        "type": "config",
                        "apiVersion": "[parameters('apiVersions').webApiVersion1]",
                        "dependsOn": [
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').webSiteName)]",
                            "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').webSiteName, '/extensions/MSDeploy')]"
                        ],
                        "tags": {
                            "displayName": "websiteAppSettings"
                        },
                        "properties": {
                            "restServer": "[concat('https://', parameters('webSiteSettings').apiServerName,'.azurewebsites.net/')]",
                            "b2cApplicationId": "[parameters('webSiteSettings').b2cClientId]",
                            "signInPolicyName": "[parameters('webSiteSettings').b2cSignInPolicyId]",
                            "signInSignUpPolicyName": "[parameters('webSiteSettings').b2cSignUpPolicyId]",
                            "editProfilePolicyName": "[parameters('webSiteSettings').b2cEditProfilePolicyId]",
                            "tenantName": "[parameters('webSiteSettings').b2cTenant]",
                            "redirect_uri": "[concat(parameters('webSiteSettings').websiteFullAddress,'#/dashboard')]"
                        }
                    }
                ]
            },
            
        {
            "apiVersion": "[parameters('apiVersions').webApiVersion]",
            "name": "[parameters('webSiteSettings').weatherApiWebApp]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('webSiteSettings').location]",
            "dependsOn": [
                "[resourceId('Microsoft.Web/serverfarms', parameters('webSiteSettings').hostingPlanName)]"
            ],
            "properties": {
                "name": "[parameters('webSiteSettings').weatherApiWebApp]",
                "serverFarmId": "[parameters('webSiteSettings').hostingPlanName]",
                "hostingEnvironment": "[parameters('appServiceEnv').appName]",
                "hostingEnvironmentId": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('appServiceEnv').appName)]"
            },
            "resources": [
                {
                    "apiVersion": "[parameters('apiVersions').webApiVersion]",
                    "name": "web",
                    "type": "config",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').weatherApiWebApp)]",
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').weatherApiWebApp, '/extensions/MSDeploy')]"
                    ],
                    "tags": {
                        "displayName": "WeatherAPIConfig"
                    },
                    "properties": {
                        "phpVersion": "5.6",
                        "netFrameworkVersion": "v4.6",
                        "use32BitWorkerProcess": false,
                        "webSocketsEnabled": true,
                        "alwaysOn": true,
                        "remoteDebuggingEnabled": true,
                        "remoteDebuggingVersion": "VS2015"
                    }
                },
                {
                    "name": "MSDeploy",
                    "type": "extensions",
                    "location": "[parameters('webSiteSettings').location]",
                    "apiVersion": "[parameters('apiVersions').webApiVersion]",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').weatherApiWebApp)]"
                    ],
                    "tags": {
                        "displayName": "WeatherAPI"
                    },
                    "properties": {
                        "packageUri": "[concat(parameters('webSiteSettings').WeatherApiPackageURI, parameters('webSiteSettings').SasToken)]"
                    }
                },
                {
                    "name": "connectionstrings",
                    "type": "config",
                    "apiVersion": "[parameters('apiVersions').webApiVersion]",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').weatherApiWebApp)]",
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').weatherApiWebApp, '/extensions/MSDeploy')]"
                    ],
                    "tags": {
                        "displayName": "WeatherAPIConnectionStrings"
                    },
                    "properties": {
                        "DbConnect2": {
                            "value": "[parameters('webSiteSettings').connectionString]",
                            "type": "Custom"
                        }
                    }
                },
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "[parameters('apiVersions').webApiVersion]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('webSiteSettings').weatherApiWebApp)]",
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').weatherApiWebApp, '/extensions/MSDeploy')]"
                    ],
                    "tags": {
                        "displayName": "WeatherAPISettings"
                    },
                    "properties": {
                        "cityName": "Hyderabad",
                        "countryCode": "IN",
                        "appID": "036d85216b22dfaa823302e354748c1d"
                    }
                }
            ]
        },
        {
            "name": "[parameters('webSiteSettings').webjobStorageName]",
            "location": "[parameters('webSiteSettings').location]",
            "type": "Microsoft.Storage/storageAccounts",
            "apiVersion": "[parameters('apiVersions').storageApiVersion1]",
            "dependsOn": [],
            "kind": "Storage",
            "sku": {
                "name": "[parameters('webSiteSettings').webjobStorageType]"
            },
            "tags": {
                "displayName": "webjobStorage"
            }
        },
        {
            "apiVersion": "[parameters('apiVersions').webApiVersion]",
            "name": "[parameters('webSiteSettings').apiServerName]",
            "type": "Microsoft.Web/sites",
            "location": "[parameters('webSiteSettings').location]",
            "dependsOn": [
                "[parameters('webSiteSettings').hostingPlanName]"
            ],
            "tags": {
                "[concat('hidden-related:', resourceId('Microsoft.Web/serverfarms', parameters('webSiteSettings').hostingPlanName))]": "empty",
                "displayName": "Website"
            },
            "properties": {
                "name": "[parameters('webSiteSettings').apiServerName]",
                "serverFarmId": "[resourceId('Microsoft.Web/serverfarms', parameters('webSiteSettings').hostingPlanName)]",
                "hostingEnvironment": "[parameters('appServiceEnv').appName]",
                "hostingEnvironmentId": "[resourceId('Microsoft.Web/hostingEnvironments', parameters('appServiceEnv').appName)]"
            },
            "resources": [
                {
                    "apiVersion": "[parameters('apiVersions').webApiVersion1]",
                    "name": "web",
                    "type": "config",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').apiServerName)]",
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').apiServerName, '/extensions/MSDeploy')]"
                    ],
                    "tags": {
                        "displayName": "WebAppConfig"
                    },
                    "properties": {
                        "phpVersion": "5.6",
                        "netFrameworkVersion": "v4.6",
                        "use32BitWorkerProcess": false,
                        "webSocketsEnabled": true,
                        "alwaysOn": true,
                        "remoteDebuggingEnabled": true,
                        "remoteDebuggingVersion": "VS2015",
                        "cors": {
                        "allowedOrigins": [
                                "[concat('https://', parameters('webSiteSettings').webSiteName, '.azurewebsites.net')]"
                            ]
                        }
                    }
                },
                {
                    "name": "MSDeploy",
                    "type": "extensions",
                    "location": "[parameters('webSiteSettings').location]",
                    "apiVersion": "[parameters('apiVersions').webApiVersion1]",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').apiServerName)]",
                        "[concat('Microsoft.Storage/storageAccounts/',parameters('webSiteSettings').webjobStorageName)]"
                    ],
                    "tags": {
                        "displayName": "WebAppMSDeploy"
                    },
                    "properties": {
                        "packageUri": "[parameters('webSiteSettings').restServerPackageURI]"
                    }
                },
                {
                    "name": "connectionstrings",
                    "type": "config",
                    "apiVersion": "[parameters('apiVersions').webApiVersion1]",
                    "dependsOn": [
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').apiServerName)]",
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').apiServerName, '/extensions/MSDeploy')]"
                    ],
                    "tags": {
                        "displayName": "RESTServerConnectionStrings"
                    },
                    "properties": {
                        "BlobConnection": {
                            "value": "[parameters('webSiteSettings').blobconnectionString]",
                            "type": "Custom"
                        },
                        "PowerGridEntities": {
                            "value": "[parameters('webSiteSettings').powerGridEntities]",
                            "type": "Custom"
                        },
                        "AzureWebJobsDashboard": {
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('webSiteSettings').webjobStorageName,';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('webSiteSettings').webjobStorageName), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
                            "type": "Custom"
                        },
                        "AzureWebJobsStorage": {
                            "value": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('webSiteSettings').webjobStorageName,';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts',parameters('webSiteSettings').webjobStorageName), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]",
                            "type": "Custom"
                        }
                    }
                },
                {
                    "name": "appsettings",
                    "type": "config",
                    "apiVersion": "[parameters('apiVersions').webApiVersion1]",
                    "dependsOn": [
                        "[resourceId('Microsoft.Web/sites', parameters('webSiteSettings').apiServerName)]",
                        "[concat('Microsoft.Web/sites/', parameters('webSiteSettings').apiServerName, '/extensions/MSDeploy')]"
                    ],
                    "tags": {
                        "displayName": "restAppSettings"
                    },
                    "properties": {
                        "AnomalyThreshold": "[parameters('webSiteSettings').anomalyThreshold]",
                        "MeterKwhCost": "[parameters('webSiteSettings').meterKWHCost]",
                        "DbConnectionString": "[parameters('webSiteSettings').databaseConnString]",
                        "NotificationIcon": "[parameters('webSiteSettings').notificationIcon]",
                        "NotificationClickAction": "[parameters('webSiteSettings').notificationClickAction]",
                        "PowerGridEntities": "[parameters('webSiteSettings').powerGridEntities]",
                        "b2c:AadInstance": "[parameters('webSiteSettings').b2cAadInstance]",
                        "b2c:Tenant": "[parameters('webSiteSettings').b2cTenant]",
                        "b2c:ClientId": "[parameters('webSiteSettings').b2cClientId]",
                        "b2c:SignUpPolicyId": "[parameters('webSiteSettings').b2cSignUpPolicyId]",
                        "b2c:SignInPolicyId": "[parameters('webSiteSettings').b2cSignInPolicyId]",
                        "b2c:ClientSecret": "[parameters('webSiteSettings').b2cClientSecret]",
                        "b2c:ChangePasswordPolicy": "[parameters('webSiteSettings').b2cChangePasswordPolicy]",
                        "EmailHost": "[parameters('webSiteSettings').emailHost]",
                        "EmailHostPort": "[parameters('webSiteSettings').emailHostPort]",
                        "EmailSender": "[parameters('webSiteSettings').senderEmail]",
                        "EmailHostPassword": "[parameters('webSiteSettings').senderEmailPassword]",
                        "BlobStorageConnectionString": "[concat('DefaultEndpointsProtocol=https;AccountName=',parameters('webSiteSettings').webjobStorageName,';AccountKey=', listKeys(resourceId('Microsoft.Storage/storageAccounts', parameters('webSiteSettings').webjobStorageName), providers('Microsoft.Storage', 'storageAccounts').apiVersions[0]).keys[0].value)]"
                    }
                }
            ]
        },
        {
            "apiVersion": "[parameters('apiVersions').webApiVersion2]",
            "type": "Microsoft.Scheduler/jobCollections",
            "dependsOn": [
                "[resourceId('Microsoft.Web/Sites',  parameters('webSiteSettings').apiServerName)]",
                "[resourceId('Microsoft.Web/Sites',  parameters('webSiteSettings').weatherApiWebApp)]"
            ],
            "location":  "[parameters('webSiteSettings').location]",
            "name": "[parameters('webSiteSettings').jobCollectionName]",
            "properties": {
                "sku": {
                    "name": "Standard"
                },
                "quota": {
                    "maxJobCount": "10",
                    "maxRecurrence": {
                        "Frequency": "minute",
                        "interval": "1"
                    }
                }
            },
            "resources": [
                {
                    "apiVersion": "[parameters('apiVersions').webApiVersion2]",
                    "name": "DataUtilWebJob",
                    "type": "jobs",
                    "dependsOn": [
                        "[resourceId('Microsoft.Scheduler/jobCollections',  parameters('webSiteSettings').jobCollectionName)]"
                    ],
                    "properties": {
                        "startTime": "2015-02-10T00:08:00Z",
                        "action": {
                            "request": {
                            "uri": "[concat(list(resourceId('Microsoft.Web/sites/config', parameters('webSiteSettings').apiServerName, 'publishingcredentials'), '2014-06-01').properties.scmUri, '')]",
                                "method": "GET"
                            },
                            "type": "HTTP",
                            "retryPolicy": {
                                "retryType": "Fixed",
                                "retryInterval": "PT1M",
                                "retryCount": 2
                            }
                        },
                        "state": "Enabled"
                    }
                },
                {
                    "apiVersion": "[parameters('apiVersions').webApiVersion]",
                    "name": "WeatherWebJob",
                    "type": "jobs",
                    "dependsOn": [
                        "[resourceId('Microsoft.Scheduler/jobCollections',  parameters('webSiteSettings').jobCollectionName)]"
                    ],
                    "properties": {
                        "startTime": "2015-02-10T00:08:00Z",
                        "action": {
                            "request": {
                                "uri": "[concat(list(resourceId('Microsoft.Web/sites/config', parameters('webSiteSettings').weatherApiWebApp, 'publishingcredentials'), '2014-06-01').properties.scmUri, '/App_Data/jobs/triggered/WeatherWebJob')]",
                                "method": "GET"
                            },
                            "type": "HTTP",
                            "retryPolicy": {
                                "retryType": "None"
                            }
                        },
                        "state": "Enabled",
                        "recurrence": {
                            "interval": 1,
                            "frequency": "minute"
                        }
                    }
                }
            ]
        },
        {
            "apiVersion": "[parameters('apiVersions').aseVnetApiVersion]",
            "type": "Microsoft.Network/virtualNetworks",
            "name": "[parameters('appServiceEnv').virtualNetworkName]",
            "location": "[parameters('aseLocation')]",
            "dependsOn": [
                "[concat('Microsoft.Network/networkSecurityGroups/', parameters('appServiceEnv').networkSecurityGroupName)]",
                "[concat('Microsoft.Network/routeTables/', parameters('appServiceEnv').subnetRouteTableName)]"
            ],
            "properties": {
                "addressSpace": {
                    "addressPrefixes": [
                        "[parameters('appServiceEnv').vnetAddress]"
                    ]
                },
                "subnets": [
                    {
                        "name": "[parameters('appServiceEnv').subnetName]",
                        "properties": {
                            "addressPrefix": "[parameters('appServiceEnv').subnetPrefix]",
                            "networkSecurityGroup": {
                                "id": "[resourceId('Microsoft.Network/networkSecurityGroups', parameters('appServiceEnv').networkSecurityGroupName)]"
                            },
                            "routeTable": {
                                "id": "[resourceId('Microsoft.Network/routeTables', parameters('appServiceEnv').subnetRouteTableName)]"
                            }
                        }
                    },
                    {
                        "name": "[parameters('appServiceEnv').subnetName1]",
                        "properties": {
                            "addressPrefix": "[parameters('appServiceEnv').subnetPrefix1]"
                        }
                    },
                    {
                        "name": "[parameters('appServiceEnv').subnetName2]",
                        "properties": {
                            "addressPrefix": "[parameters('appServiceEnv').subnetPrefix2]"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('apiVersions').aseNetworkApiVersion]",
            "type": "Microsoft.Network/routeTables",
            "name": "[parameters('appServiceEnv').subnetRouteTableName]",
            "location": "[parameters('aseLocation')]",
            "tags": {
                "displayName": "UDR - Subnet"
            },
            "properties": {
                "routes": [
                    {
                        "name": "aso-route",
                        "properties": {
                            "addressPrefix": "0.0.0.0/0",
                            "nextHopType": "Internet"
                        }
                    }
                ]
            }
        },
        {
            "apiVersion": "[parameters('apiVersions').aseNetworkApiVersion]",
            "type": "Microsoft.Network/networkSecurityGroups",
            "name": "[parameters('appServiceEnv').networkSecurityGroupName]",
            "location": "[parameters('aseLocation')]",
            "tags": {
                "displayName": "NSGSubnet"
            },
            "properties": {
                "securityRules": [
                    {
                        "name": "Inbound-management",
                        "properties": {
                            "description": "Used to manage ASE from public VIP",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "454-455",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "ASE-internal-inbound",
                        "properties": {
                            "description": "ASE-internal-inbound",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "192.168.250.0/24",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Inbound-HTTP",
                        "properties": {
                            "description": "Allow HTTP",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Inbount-HTTPS",
                        "properties": {
                            "description": "Allow HTTPS",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Inbound-FTP",
                        "properties": {
                            "description": "Allow FTP over port 21",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "21",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 140,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Inbound-FTPS",
                        "properties": {
                            "description": "Allow FTPS",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "990",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Inbound-FTP-Data",
                        "properties": {
                            "description": "RDP",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "10001-10020",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 160,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Inbound-Remote-Debugging",
                        "properties": {
                            "description": "Visual Studio remote debugging",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "4016-4022",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 170,
                            "direction": "Inbound"
                        }
                    },
                    {
                        "name": "Outbound-443",
                        "properties": {
                            "description": "Azure Storage blob",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "443",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 100,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "Outbound-SMB",
                        "properties": {
                            "description": "Azure Storage queue",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "445",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 110,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "Outbound-DB",
                        "properties": {
                            "description": "Database",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "1433",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 120,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "Outbound-DB2",
                        "properties": {
                            "description": "Database 2",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "11000-11999",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 130,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "Outbound-DB3",
                        "properties": {
                            "description": "Database 3",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "14000-14999",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 140,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "Outbound-DNS",
                        "properties": {
                            "description": "DNS",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "53",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 150,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "ASE-internal-outbound",
                        "properties": {
                            "description": "Azure Storage queue",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "192.168.250.0/24",
                            "access": "Allow",
                            "priority": 160,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "Outbound-80",
                        "properties": {
                            "description": "Outbound 80",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "80",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "*",
                            "access": "Allow",
                            "priority": 170,
                            "direction": "Outbound"
                        }
                    },
                    {
                        "name": "ASE-to-VNET",
                        "properties": {
                            "description": "ASE to VNET",
                            "protocol": "*",
                            "sourcePortRange": "*",
                            "destinationPortRange": "*",
                            "sourceAddressPrefix": "*",
                            "destinationAddressPrefix": "192.168.250.0/23",
                            "access": "Allow",
                            "priority": 180,
                            "direction": "Outbound"
                        }
                    }
                ]
            }
        }
    ]
}